[build-system]
requires = ["flit-core >= 3.8", "ninja"]
build-backend = "flit_core.buildapi"

# Project settings
[project]
name = "llava"
dynamic = ["version"]
description = "LLaVA - Large Language and Vision Assistant."
readme = "README.md"
requires-python = ">= 3.10"
license.file = "LICENSE"
keywords = ["machine-learning", "deep-learning", "computer-vision", "ML", "DL", "AI"]
authors = [
    { name = "Lornatang", email = "liuchangyu1111@gmail.com" },
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Copyright (c) AlphaBetter. All rights reserved.",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Operating System :: POSIX :: Linux",
]

# Required dependencies
dependencies = [
    "accelerate>=0.23.0",
    "av",
    "bitsandbytes",
    "datasets",
    "decord",
    "deepspeed",
    "einops_exts",
    "fastapi",
    "flash-attn>2.8.0",
    "gradio",
    "numpy>=2.0.0",
    "peft",
    "pillow",
    "pi-heif",
    "sentencepiece",
    "shortuuid",
    "timm",
    "tiktoken",
    "tokenizers",
    "transformers",
    "uvicorn",
    "wandb",
]

[project.scripts]
pyproject-build = "build.__main__:entrypoint"

# Tools settings
[tool.setuptools]
packages = { find = { where = ["."], include = ["llava", "llava.*"] } }

[tool.setuptools.dynamic]
version = { attr = "llava.__version__" }

[tool.pytest.ini_options]
addopts = "--doctest-modules --durations=30 --color=yes"
markers = [
    "slow: skip slow tests unless --slow is set",
]
norecursedirs = [".git", "dist", "build"]

[tool.isort]
line_length = 150
multi_line_output = 0

[tool.yapf]
based_on_style = "pep8"
spaces_before_comment = 2
column_limit = 150
coalesce_brackets = true
spaces_around_power_operator = true
space_between_ending_comma_and_closing_bracket = true
split_before_closing_bracket = false
split_before_first_argument = false

[tool.ruff]
line-length = 150

[tool.docformatter]
wrap-summaries = 150
wrap-descriptions = 150
in-place = true
pre-summary-newline = true
close-quotes-on-newline = true

[tool.codespell]
ignore-words-list = "crate,nd,ned,strack,dota,ane,segway,fo,gool,winn,commend,bloc,nam,afterall"
skip = '*.pkl,*.torchscript,*.onnx,*.engine,*.npy,*.data*,*.csv,*pnnx*,*venv*,*translat*,__pycache__*,*.ico,*.jpg,*.png,*.mp4,*.mov,/results,/.git,'
